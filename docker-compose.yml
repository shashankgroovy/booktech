services:
  db:
    container_name: booktech_db
    image: postgres
    env_file: ./config/common.env
    restart: "on-failure"
    ports:
      - "${DB_HOST_PORT:-5432}:5432"
    networks:
      - default
    volumes:
      - "./data:/app/data"

  redis:
    container_name: booktech_redis
    hostname: localhost
    image: redis:alpine
    ports:
      - "6379:6379"
    expose:
      - "6379"
    networks:
      - default
    volumes:
      - "./data:/app/data"

  initializer:
    container_name: initializer
    build:
      context: .
      dockerfile: Dockerfile
    image: booktech_app
    env_file: ./config/common.env
    command: ['celery', '-A', 'booktech', 'call', 'booktech.internal.tasks.init_db']
    depends_on:
      - db
      - redis
    networks:
      - default
    volumes:
      - "./data:/app/data"
      - ./:/app

  worker:
    image: booktech_app
    env_file: ./config/common.env
    deploy:
      replicas: ${WORKER_REPLICA_COUNT:-2}
    command: ['celery', '-A', 'booktech', 'worker', '--loglevel=INFO']
    depends_on:
      - db
      - redis
      - initializer
    networks:
      - default
    volumes:
      - "./data:/app/data"
      - ./:/app

  beat:
    container_name: beat
    image: booktech_app
    env_file: ./config/common.env
    command: ['celery', '-A', 'booktech', 'beat', '--loglevel=INFO']
    depends_on:
      - db
      - redis
      - worker
    networks:
      - default
    volumes:
      - "./data:/app/data"
      - ./:/app

  flower:
    container_name: flower
    image: booktech_app
    env_file: ./config/common.env
    command: ['celery', '-A', 'booktech', 'flower', '--loglevel=INFO']
    ports:
      - "5555:5555"
    depends_on:
      - db
      - redis
      - worker
    networks:
      - default
    volumes:
      - "./data:/app/data"
      - ./:/app


networks:
  default:
    driver: bridge

volumes:
  data:
    driver: local
